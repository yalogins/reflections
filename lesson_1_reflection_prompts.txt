How did viewing a diff between two versions of a file help you see the bug that
was introduced?

    By highlighting changes made between the two versions, it made debugging faster

How could having easy access to the entire history of a file make you a more
efficient programmer in the long term?

    Easily fall back to previous versions of code.

What do you think are the pros and cons of manually choosing when to create a
commit, like you do in Git, vs having versions automatically saved, like Google
docs does?

    Manually chosen commits can make more logical sense compared to automatic commits.

Why do you think some version control systems, like Git, allow saving multiple
files in one commit, while others, like Google Docs, treat each file separately?

    Git is a version control system used for a wide variety of file types. Google Docs is primarily a word processor.
    Therefore, Google Docs handles version control for the each word document separately one file at a time since there
    is seldom dependency and relationships between two or more word documents.

How can you use the commands git log and git diff to view the history of files?

    git log command shows the history of commits a file has undergone and the commit ids.
    using the commit ids obtained from git log command, you can use the git diff command to view the exact
    changes between different versions of the file.

How might using version control make you more confident to make changes that
could break something?

    The knowledge that you can always revert to previous working versions can make you more confident to make changes that 
    could break something.

Now that you have your workspace set up, what do you want to try using Git for?

    do some coding and save different versions of the code
